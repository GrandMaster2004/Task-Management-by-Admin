{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"token\");\n  }\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"token\", token);\n  }\n  removeToken() {\n    this.token = null;\n    localStorage.removeItem(\"token\");\n  }\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(this.token && {\n          Authorization: `Bearer ${this.token}`\n        })\n      },\n      ...options\n    };\n    if (config.body && typeof config.body === \"object\") {\n      config.body = JSON.stringify(config.body);\n    }\n    try {\n      console.log(`Making request to: ${url}`, config);\n      const response = await fetch(url, config);\n      let data;\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        data = await response.json();\n      } else {\n        data = {\n          message: await response.text()\n        };\n      }\n      console.log(`Response from ${url}:`, response.status, data);\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.removeToken();\n          throw new Error(\"Authentication failed. Please login again.\");\n        }\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\n      }\n      return data;\n    } catch (error) {\n      console.error(\"API Request failed:\", error);\n      throw error;\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    return this.request(\"/user/register\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async login(credentials) {\n    return this.request(\"/user/login\", {\n      method: \"POST\",\n      body: credentials\n    });\n  }\n  async getCurrentUser() {\n    return this.request(\"/user/me\");\n  }\n\n  // Task methods\n  async getTasks() {\n    return this.request(\"/tasks/gp\", {\n      method: \"GET\"\n    });\n  }\n  async createTask(taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null\n    };\n    return this.request(\"/tasks/gp\", {\n      method: \"POST\",\n      body: transformedData\n    });\n  }\n  async updateTask(taskId, taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null\n    };\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"POST\",\n      body: transformedData\n    });\n  }\n  async deleteTask(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"DELETE\"\n    });\n  }\n  async getTaskById(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"GET\"\n    });\n  }\n\n  // Admin methods\n  async getAllUsers() {\n    return this.request(\"/admin/users\", {\n      method: \"GET\"\n    });\n  }\n  async createUser(userData) {\n    return this.request(\"/admin/users\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData\n    });\n  }\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"DELETE\"\n    });\n  }\n  async assignTask(taskData) {\n    return this.request(\"/admin/assign-task\", {\n      method: \"POST\",\n      body: taskData\n    });\n  }\n  async getSubAdmins() {\n    return this.request(\"/admin/subadmins\", {\n      method: \"GET\"\n    });\n  }\n  async createSubAdmin(userData) {\n    return this.request(\"/admin/subadmins\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async updateSubAdminPermissions(subAdminId, permissions) {\n    return this.request(`/admin/subadmins/${subAdminId}/permissions`, {\n      method: \"PUT\",\n      body: permissions\n    });\n  }\n  async getAllTasks() {\n    return this.request(\"/admin/tasks\", {\n      method: \"GET\"\n    });\n  }\n\n  // SubAdmin methods\n  async getAccessibleUsers() {\n    return this.request(\"/subadmin/users\", {\n      method: \"GET\"\n    });\n  }\n  async getAssignedTasks() {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"GET\"\n    });\n  }\n  async updateUserAsSubAdmin(userId, userData) {\n    return this.request(`/subadmin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData\n    });\n  }\n  async createTaskAsSubAdmin(taskData) {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"POST\",\n      body: taskData\n    });\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","token","localStorage","getItem","setToken","setItem","removeToken","removeItem","request","endpoint","options","url","config","headers","Authorization","body","JSON","stringify","console","log","response","fetch","data","contentType","get","includes","json","message","text","status","ok","Error","error","register","userData","method","login","credentials","getCurrentUser","getTasks","createTask","taskData","transformedData","title","description","priority","dueDate","completed","assignedTo","updateTask","taskId","deleteTask","getTaskById","getAllUsers","createUser","updateUser","userId","deleteUser","assignTask","getSubAdmins","createSubAdmin","updateSubAdminPermissions","subAdminId","permissions","getAllTasks","getAccessibleUsers","getAssignedTasks","updateUserAsSubAdmin","createTaskAsSubAdmin"],"sources":["C:/Users/gondy/Downloads/taskflow-frontend/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:4000/api\"\n\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"token\")\n  }\n\n  setToken(token) {\n    this.token = token\n    localStorage.setItem(\"token\", token)\n  }\n\n  removeToken() {\n    this.token = null\n    localStorage.removeItem(\"token\")\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(this.token && { Authorization: `Bearer ${this.token}` }),\n      },\n      ...options,\n    }\n\n    if (config.body && typeof config.body === \"object\") {\n      config.body = JSON.stringify(config.body)\n    }\n\n    try {\n      console.log(`Making request to: ${url}`, config)\n      const response = await fetch(url, config)\n\n      let data\n      const contentType = response.headers.get(\"content-type\")\n      if (contentType && contentType.includes(\"application/json\")) {\n        data = await response.json()\n      } else {\n        data = { message: await response.text() }\n      }\n\n      console.log(`Response from ${url}:`, response.status, data)\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.removeToken()\n          throw new Error(\"Authentication failed. Please login again.\")\n        }\n        throw new Error(data.message || `HTTP error! status: ${response.status}`)\n      }\n\n      return data\n    } catch (error) {\n      console.error(\"API Request failed:\", error)\n      throw error\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    return this.request(\"/user/register\", {\n      method: \"POST\",\n      body: userData,\n    })\n  }\n\n  async login(credentials) {\n    return this.request(\"/user/login\", {\n      method: \"POST\",\n      body: credentials,\n    })\n  }\n\n  async getCurrentUser() {\n    return this.request(\"/user/me\")\n  }\n\n  // Task methods\n  async getTasks() {\n    return this.request(\"/tasks/gp\", {\n      method: \"GET\",\n    })\n  }\n\n  async createTask(taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    }\n\n    return this.request(\"/tasks/gp\", {\n      method: \"POST\",\n      body: transformedData,\n    })\n  }\n\n  async updateTask(taskId, taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    }\n\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"POST\",\n      body: transformedData,\n    })\n  }\n\n  async deleteTask(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"DELETE\",\n    })\n  }\n\n  async getTaskById(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"GET\",\n    })\n  }\n\n  // Admin methods\n  async getAllUsers() {\n    return this.request(\"/admin/users\", {\n      method: \"GET\",\n    })\n  }\n\n  async createUser(userData) {\n    return this.request(\"/admin/users\", {\n      method: \"POST\",\n      body: userData,\n    })\n  }\n\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    })\n  }\n\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"DELETE\",\n    })\n  }\n\n  async assignTask(taskData) {\n    return this.request(\"/admin/assign-task\", {\n      method: \"POST\",\n      body: taskData,\n    })\n  }\n\n  async getSubAdmins() {\n    return this.request(\"/admin/subadmins\", {\n      method: \"GET\",\n    })\n  }\n\n  async createSubAdmin(userData) {\n    return this.request(\"/admin/subadmins\", {\n      method: \"POST\",\n      body: userData,\n    })\n  }\n\n  async updateSubAdminPermissions(subAdminId, permissions) {\n    return this.request(`/admin/subadmins/${subAdminId}/permissions`, {\n      method: \"PUT\",\n      body: permissions,\n    })\n  }\n\n  async getAllTasks() {\n    return this.request(\"/admin/tasks\", {\n      method: \"GET\",\n    })\n  }\n\n  // SubAdmin methods\n  async getAccessibleUsers() {\n    return this.request(\"/subadmin/users\", {\n      method: \"GET\",\n    })\n  }\n\n  async getAssignedTasks() {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"GET\",\n    })\n  }\n\n  async updateUserAsSubAdmin(userId, userData) {\n    return this.request(`/subadmin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    })\n  }\n\n  async createTaskAsSubAdmin(taskData) {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"POST\",\n      body: taskData,\n    })\n  }\n}\n\nexport default new ApiService()\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}