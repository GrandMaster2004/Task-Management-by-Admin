{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"token\");\n  }\n\n  // ✅ Get token\n  getToken() {\n    return this.token || localStorage.getItem(\"token\");\n  }\n\n  // ✅ Set token\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"token\", token);\n  }\n\n  // ✅ Remove token\n  removeToken() {\n    this.token = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  // ✅ Generic request handler\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(this.getToken() && {\n          Authorization: `Bearer ${this.getToken()}`\n        })\n      },\n      ...options\n    };\n    if (config.body && typeof config.body === \"object\") {\n      config.body = JSON.stringify(config.body);\n    }\n    try {\n      const response = await fetch(url, config);\n      const contentType = response.headers.get(\"content-type\");\n      const data = contentType && contentType.includes(\"application/json\") ? await response.json() : {\n        message: await response.text()\n      };\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.removeToken();\n          throw new Error(\"Authentication failed. Please login again.\");\n        }\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\n      }\n      return data;\n    } catch (error) {\n      console.error(\"API Request failed:\", error);\n      throw error;\n    }\n  }\n\n  // ====================\n  // ✅ Auth Methods\n  // ====================\n\n  async register(userData) {\n    return this.request(\"/user/register\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async login(credentials) {\n    return this.request(\"/user/login\", {\n      method: \"POST\",\n      body: credentials\n    });\n  }\n  async getCurrentUser() {\n    return this.request(\"/user/me\");\n  }\n\n  // ====================\n  // ✅ Task Methods\n  // ====================\n\n  async getTasks() {\n    return this.request(\"/tasks/gp\", {\n      method: \"GET\"\n    });\n  }\n  async getTaskById(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"GET\"\n    });\n  }\n  async createTask(taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null\n    };\n    return this.request(\"/tasks/gp\", {\n      method: \"POST\",\n      body: transformedData\n    });\n  }\n  async updateTask(taskId, taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null\n    };\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"POST\",\n      body: transformedData\n    });\n  }\n  async deleteTask(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"DELETE\"\n    });\n  }\n\n  // ====================\n  // ✅ Admin Methods\n  // ====================\n\n  async getAllUsers() {\n    return this.request(\"/admin/users\", {\n      method: \"GET\"\n    });\n  }\n  async createUser(userData) {\n    return this.request(\"/admin/users\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData\n    });\n  }\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"DELETE\"\n    });\n  }\n  async assignTask(taskData) {\n    return this.request(\"/admin/assign-task\", {\n      method: \"POST\",\n      body: taskData\n    });\n  }\n  async getSubAdmins() {\n    return this.request(\"/admin/subadmins\", {\n      method: \"GET\"\n    });\n  }\n  async createSubAdmin(userData) {\n    return this.request(\"/admin/subadmins\", {\n      method: \"POST\",\n      body: userData\n    });\n  }\n  async updateSubAdminPermissions(subAdminId, permissions) {\n    return this.request(`/admin/subadmins/${subAdminId}/permissions`, {\n      method: \"PUT\",\n      body: permissions\n    });\n  }\n  async getAllTasks() {\n    return this.request(\"/admin/tasks\", {\n      method: \"GET\"\n    });\n  }\n\n  // ====================\n  // ✅ SubAdmin Methods\n  // ====================\n\n  async getAccessibleUsers() {\n    return this.request(\"/subadmin/users\", {\n      method: \"GET\"\n    });\n  }\n  async getAssignedTasks() {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"GET\"\n    });\n  }\n  async updateUserAsSubAdmin(userId, userData) {\n    return this.request(`/subadmin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData\n    });\n  }\n  async createTaskAsSubAdmin(taskData) {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"POST\",\n      body: taskData\n    });\n  }\n}\n\n// Export singleton\nexport default new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","token","localStorage","getItem","getToken","setToken","setItem","removeToken","removeItem","request","endpoint","options","url","config","headers","Authorization","body","JSON","stringify","response","fetch","contentType","get","data","includes","json","message","text","ok","status","Error","error","console","register","userData","method","login","credentials","getCurrentUser","getTasks","getTaskById","taskId","createTask","taskData","transformedData","title","description","priority","dueDate","completed","assignedTo","updateTask","deleteTask","getAllUsers","createUser","updateUser","userId","deleteUser","assignTask","getSubAdmins","createSubAdmin","updateSubAdminPermissions","subAdminId","permissions","getAllTasks","getAccessibleUsers","getAssignedTasks","updateUserAsSubAdmin","createTaskAsSubAdmin"],"sources":["C:/Users/gondy/Downloads/taskflow-frontend/frontend/src/context/AuthContext.js"],"sourcesContent":["const API_BASE_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\n\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"token\");\n  }\n\n  // ✅ Get token\n  getToken() {\n    return this.token || localStorage.getItem(\"token\");\n  }\n\n  // ✅ Set token\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"token\", token);\n  }\n\n  // ✅ Remove token\n  removeToken() {\n    this.token = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  // ✅ Generic request handler\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(this.getToken() && { Authorization: `Bearer ${this.getToken()}` }),\n      },\n      ...options,\n    };\n\n    if (config.body && typeof config.body === \"object\") {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      const response = await fetch(url, config);\n      const contentType = response.headers.get(\"content-type\");\n      const data =\n        contentType && contentType.includes(\"application/json\")\n          ? await response.json()\n          : { message: await response.text() };\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.removeToken();\n          throw new Error(\"Authentication failed. Please login again.\");\n        }\n        throw new Error(\n          data.message || `HTTP error! status: ${response.status}`\n        );\n      }\n\n      return data;\n    } catch (error) {\n      console.error(\"API Request failed:\", error);\n      throw error;\n    }\n  }\n\n  // ====================\n  // ✅ Auth Methods\n  // ====================\n\n  async register(userData) {\n    return this.request(\"/user/register\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async login(credentials) {\n    return this.request(\"/user/login\", {\n      method: \"POST\",\n      body: credentials,\n    });\n  }\n\n  async getCurrentUser() {\n    return this.request(\"/user/me\");\n  }\n\n  // ====================\n  // ✅ Task Methods\n  // ====================\n\n  async getTasks() {\n    return this.request(\"/tasks/gp\", {\n      method: \"GET\",\n    });\n  }\n\n  async getTaskById(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"GET\",\n    });\n  }\n\n  async createTask(taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    };\n\n    return this.request(\"/tasks/gp\", {\n      method: \"POST\",\n      body: transformedData,\n    });\n  }\n\n  async updateTask(taskId, taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    };\n\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"POST\",\n      body: transformedData,\n    });\n  }\n\n  async deleteTask(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"DELETE\",\n    });\n  }\n\n  // ====================\n  // ✅ Admin Methods\n  // ====================\n\n  async getAllUsers() {\n    return this.request(\"/admin/users\", { method: \"GET\" });\n  }\n\n  async createUser(userData) {\n    return this.request(\"/admin/users\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    });\n  }\n\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"DELETE\",\n    });\n  }\n\n  async assignTask(taskData) {\n    return this.request(\"/admin/assign-task\", {\n      method: \"POST\",\n      body: taskData,\n    });\n  }\n\n  async getSubAdmins() {\n    return this.request(\"/admin/subadmins\", { method: \"GET\" });\n  }\n\n  async createSubAdmin(userData) {\n    return this.request(\"/admin/subadmins\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async updateSubAdminPermissions(subAdminId, permissions) {\n    return this.request(`/admin/subadmins/${subAdminId}/permissions`, {\n      method: \"PUT\",\n      body: permissions,\n    });\n  }\n\n  async getAllTasks() {\n    return this.request(\"/admin/tasks\", { method: \"GET\" });\n  }\n\n  // ====================\n  // ✅ SubAdmin Methods\n  // ====================\n\n  async getAccessibleUsers() {\n    return this.request(\"/subadmin/users\", { method: \"GET\" });\n  }\n\n  async getAssignedTasks() {\n    return this.request(\"/subadmin/tasks\", { method: \"GET\" });\n  }\n\n  async updateUserAsSubAdmin(userId, userData) {\n    return this.request(`/subadmin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    });\n  }\n\n  async createTaskAsSubAdmin(taskData) {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"POST\",\n      body: taskData,\n    });\n  }\n}\n\n// Export singleton\nexport default new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}