{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gondy\\\\Downloads\\\\taskflow-frontend\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const savedTheme = localStorage.getItem(\"theme\");\n      if (savedTheme) {\n        return savedTheme;\n      }\n      // Check for system preference\n      if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        return \"dark\";\n      }\n    }\n    return \"light\";\n  });\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    root.classList.add(theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const toggleTheme = useCallback(() => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  }, []);\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"hQHizfd8L75aKfNkZUs+fvzj840=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","ThemeContext","useTheme","context","Error","ThemeProvider","children","theme","setTheme","window","savedTheme","localStorage","getItem","matchMedia","matches","root","document","documentElement","classList","remove","add","setItem","toggleTheme","prevTheme","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gondy/Downloads/taskflow-frontend/frontend/src/context/ThemeContext.js"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const savedTheme = localStorage.getItem(\"theme\");\r\n      if (savedTheme) {\r\n        return savedTheme;\r\n      }\r\n      // Check for system preference\r\n      if (\r\n        window.matchMedia &&\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n      ) {\r\n        return \"dark\";\r\n      }\r\n    }\r\n    return \"light\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove(\"light\", \"dark\");\r\n    root.classList.add(theme);\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  }, []);\r\n\r\n  const value = {\r\n    theme,\r\n    setTheme,\r\n    toggleTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEb,SACEE,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,WAAW,QACN,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAX,EAAA;EAC5B,MAAMY,OAAO,GAAGR,UAAU,CAACM,YAAY,CAAC;EACxC,IAAI,CAACE,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACZ,EAAA,CANWW,QAAQ;AAQrB,OAAO,MAAMG,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAb,GAAA;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACvC,IAAI,OAAOa,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAChD,IAAIF,UAAU,EAAE;QACd,OAAOA,UAAU;MACnB;MACA;MACA,IACED,MAAM,CAACI,UAAU,IACjBJ,MAAM,CAACI,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EACzD;QACA,OAAO,MAAM;MACf;IACF;IACA,OAAO,OAAO;EAChB,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAMkB,IAAI,GAAGN,MAAM,CAACO,QAAQ,CAACC,eAAe;IAC5CF,IAAI,CAACG,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IACtCJ,IAAI,CAACG,SAAS,CAACE,GAAG,CAACb,KAAK,CAAC;IACzBI,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,WAAW,GAAGxB,WAAW,CAAC,MAAM;IACpCU,QAAQ,CAAEe,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG;IACZjB,KAAK;IACLC,QAAQ;IACRc;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAAEA;EAAQ;IAAAoB,QAAA,EAAApC,YAAA;IAAAqC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACnC,GAAA,CAtCWY,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}