{"ast":null,"code":"const API_BASE_URL=process.env.REACT_APP_API_URL||\"http://localhost:4000/api\";class ApiService{constructor(){this.token=localStorage.getItem(\"token\");}setToken(token){this.token=token;localStorage.setItem(\"token\",token);}removeToken(){this.token=null;localStorage.removeItem(\"token\");}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=`${API_BASE_URL}${endpoint}`;const config={headers:{\"Content-Type\":\"application/json\",...(this.token&&{Authorization:`Bearer ${this.token}`})},...options};if(config.body&&typeof config.body===\"object\"){config.body=JSON.stringify(config.body);}try{console.log(`Making request to: ${url}`,config);const response=await fetch(url,config);let data;const contentType=response.headers.get(\"content-type\");if(contentType&&contentType.includes(\"application/json\")){data=await response.json();}else{data={message:await response.text()};}console.log(`Response from ${url}:`,response.status,data);if(!response.ok){if(response.status===401){this.removeToken();throw new Error(\"Authentication failed. Please login again.\");}throw new Error(data.message||`HTTP error! status: ${response.status}`);}return data;}catch(error){console.error(\"API Request failed:\",error);throw error;}}// Auth methods\nasync register(userData){return this.request(\"/user/register\",{method:\"POST\",body:userData});}async login(credentials){return this.request(\"/user/login\",{method:\"POST\",body:credentials});}async getCurrentUser(){return this.request(\"/user/me\");}// Task methods\nasync getTasks(){return this.request(\"/tasks/gp\",{method:\"GET\"});}async createTask(taskData){const transformedData={title:taskData.title,description:taskData.description||\"\",priority:taskData.priority||\"Low\",dueDate:taskData.dueDate||null,completed:taskData.completed||false,assignedTo:taskData.assignedTo||null};return this.request(\"/tasks/gp\",{method:\"POST\",body:transformedData});}async updateTask(taskId,taskData){const transformedData={title:taskData.title,description:taskData.description||\"\",priority:taskData.priority||\"Low\",dueDate:taskData.dueDate||null,completed:taskData.completed||false,assignedTo:taskData.assignedTo||null};return this.request(`/tasks/${taskId}/gp`,{method:\"POST\",body:transformedData});}async deleteTask(taskId){return this.request(`/tasks/${taskId}/gp`,{method:\"DELETE\"});}async getTaskById(taskId){return this.request(`/tasks/${taskId}/gp`,{method:\"GET\"});}// Admin methods\nasync getAllUsers(){return this.request(\"/admin/users\",{method:\"GET\"});}async createUser(userData){return this.request(\"/admin/users\",{method:\"POST\",body:userData});}async updateUser(userId,userData){return this.request(`/admin/users/${userId}`,{method:\"PUT\",body:userData});}async deleteUser(userId){return this.request(`/admin/users/${userId}`,{method:\"DELETE\"});}async assignTask(taskData){return this.request(\"/admin/assign-task\",{method:\"POST\",body:taskData});}async getSubAdmins(){return this.request(\"/admin/subadmins\",{method:\"GET\"});}async createSubAdmin(userData){return this.request(\"/admin/subadmins\",{method:\"POST\",body:userData});}async updateSubAdminPermissions(subAdminId,permissions){return this.request(`/admin/subadmins/${subAdminId}/permissions`,{method:\"PUT\",body:permissions});}async getAllTasks(){return this.request(\"/admin/tasks\",{method:\"GET\"});}// SubAdmin methods\nasync getAccessibleUsers(){return this.request(\"/subadmin/users\",{method:\"GET\"});}async getAssignedTasks(){return this.request(\"/subadmin/tasks\",{method:\"GET\"});}async updateUserAsSubAdmin(userId,userData){return this.request(`/subadmin/users/${userId}`,{method:\"PUT\",body:userData});}async createTaskAsSubAdmin(taskData){return this.request(\"/subadmin/tasks\",{method:\"POST\",body:taskData});}}export default new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","token","localStorage","getItem","setToken","setItem","removeToken","removeItem","request","endpoint","options","arguments","length","undefined","url","config","headers","Authorization","body","JSON","stringify","console","log","response","fetch","data","contentType","get","includes","json","message","text","status","ok","Error","error","register","userData","method","login","credentials","getCurrentUser","getTasks","createTask","taskData","transformedData","title","description","priority","dueDate","completed","assignedTo","updateTask","taskId","deleteTask","getTaskById","getAllUsers","createUser","updateUser","userId","deleteUser","assignTask","getSubAdmins","createSubAdmin","updateSubAdminPermissions","subAdminId","permissions","getAllTasks","getAccessibleUsers","getAssignedTasks","updateUserAsSubAdmin","createTaskAsSubAdmin"],"sources":["C:/Users/gondy/OneDrive/Desktop/taskflow-frontend/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\n\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"token\");\n  }\n\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"token\", token);\n  }\n\n  removeToken() {\n    this.token = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(this.token && { Authorization: `Bearer ${this.token}` }),\n      },\n      ...options,\n    };\n\n    if (config.body && typeof config.body === \"object\") {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      console.log(`Making request to: ${url}`, config);\n      const response = await fetch(url, config);\n\n      let data;\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        data = await response.json();\n      } else {\n        data = { message: await response.text() };\n      }\n\n      console.log(`Response from ${url}:`, response.status, data);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.removeToken();\n          throw new Error(\"Authentication failed. Please login again.\");\n        }\n        throw new Error(\n          data.message || `HTTP error! status: ${response.status}`\n        );\n      }\n\n      return data;\n    } catch (error) {\n      console.error(\"API Request failed:\", error);\n      throw error;\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    return this.request(\"/user/register\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async login(credentials) {\n    return this.request(\"/user/login\", {\n      method: \"POST\",\n      body: credentials,\n    });\n  }\n\n  async getCurrentUser() {\n    return this.request(\"/user/me\");\n  }\n\n  // Task methods\n  async getTasks() {\n    return this.request(\"/tasks/gp\", {\n      method: \"GET\",\n    });\n  }\n\n  async createTask(taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    };\n\n    return this.request(\"/tasks/gp\", {\n      method: \"POST\",\n      body: transformedData,\n    });\n  }\n\n  async updateTask(taskId, taskData) {\n    const transformedData = {\n      title: taskData.title,\n      description: taskData.description || \"\",\n      priority: taskData.priority || \"Low\",\n      dueDate: taskData.dueDate || null,\n      completed: taskData.completed || false,\n      assignedTo: taskData.assignedTo || null,\n    };\n\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"POST\",\n      body: transformedData,\n    });\n  }\n\n  async deleteTask(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"DELETE\",\n    });\n  }\n\n  async getTaskById(taskId) {\n    return this.request(`/tasks/${taskId}/gp`, {\n      method: \"GET\",\n    });\n  }\n\n  // Admin methods\n  async getAllUsers() {\n    return this.request(\"/admin/users\", {\n      method: \"GET\",\n    });\n  }\n\n  async createUser(userData) {\n    return this.request(\"/admin/users\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    });\n  }\n\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: \"DELETE\",\n    });\n  }\n\n  async assignTask(taskData) {\n    return this.request(\"/admin/assign-task\", {\n      method: \"POST\",\n      body: taskData,\n    });\n  }\n\n  async getSubAdmins() {\n    return this.request(\"/admin/subadmins\", {\n      method: \"GET\",\n    });\n  }\n\n  async createSubAdmin(userData) {\n    return this.request(\"/admin/subadmins\", {\n      method: \"POST\",\n      body: userData,\n    });\n  }\n\n  async updateSubAdminPermissions(subAdminId, permissions) {\n    return this.request(`/admin/subadmins/${subAdminId}/permissions`, {\n      method: \"PUT\",\n      body: permissions,\n    });\n  }\n\n  async getAllTasks() {\n    return this.request(\"/admin/tasks\", {\n      method: \"GET\",\n    });\n  }\n\n  // SubAdmin methods\n  async getAccessibleUsers() {\n    return this.request(\"/subadmin/users\", {\n      method: \"GET\",\n    });\n  }\n\n  async getAssignedTasks() {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"GET\",\n    });\n  }\n\n  async updateUserAsSubAdmin(userId, userData) {\n    return this.request(`/subadmin/users/${userId}`, {\n      method: \"PUT\",\n      body: userData,\n    });\n  }\n\n  async createTaskAsSubAdmin(taskData) {\n    return this.request(\"/subadmin/tasks\", {\n      method: \"POST\",\n      body: taskData,\n    });\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAChBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE9D,KAAM,CAAAC,UAAW,CACfC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC5C,CAEAC,QAAQA,CAACH,KAAK,CAAE,CACd,IAAI,CAACA,KAAK,CAAGA,KAAK,CAClBC,YAAY,CAACG,OAAO,CAAC,OAAO,CAAEJ,KAAK,CAAC,CACtC,CAEAK,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACL,KAAK,CAAG,IAAI,CACjBC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAClC,CAEA,KAAM,CAAAC,OAAOA,CAACC,QAAQ,CAAgB,IAAd,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClC,KAAM,CAAAG,GAAG,CAAG,GAAGnB,YAAY,GAAGc,QAAQ,EAAE,CACxC,KAAM,CAAAM,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,IAAI,IAAI,CAACf,KAAK,EAAI,CAAEgB,aAAa,CAAE,UAAU,IAAI,CAAChB,KAAK,EAAG,CAAC,CAC7D,CAAC,CACD,GAAGS,OACL,CAAC,CAED,GAAIK,MAAM,CAACG,IAAI,EAAI,MAAO,CAAAH,MAAM,CAACG,IAAI,GAAK,QAAQ,CAAE,CAClDH,MAAM,CAACG,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACG,IAAI,CAAC,CAC3C,CAEA,GAAI,CACFG,OAAO,CAACC,GAAG,CAAC,sBAAsBR,GAAG,EAAE,CAAEC,MAAM,CAAC,CAChD,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACV,GAAG,CAAEC,MAAM,CAAC,CAEzC,GAAI,CAAAU,IAAI,CACR,KAAM,CAAAC,WAAW,CAAGH,QAAQ,CAACP,OAAO,CAACW,GAAG,CAAC,cAAc,CAAC,CACxD,GAAID,WAAW,EAAIA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC3DH,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC9B,CAAC,IAAM,CACLJ,IAAI,CAAG,CAAEK,OAAO,CAAE,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAE,CAAC,CAC3C,CAEAV,OAAO,CAACC,GAAG,CAAC,iBAAiBR,GAAG,GAAG,CAAES,QAAQ,CAACS,MAAM,CAAEP,IAAI,CAAC,CAE3D,GAAI,CAACF,QAAQ,CAACU,EAAE,CAAE,CAChB,GAAIV,QAAQ,CAACS,MAAM,GAAK,GAAG,CAAE,CAC3B,IAAI,CAAC1B,WAAW,CAAC,CAAC,CAClB,KAAM,IAAI,CAAA4B,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,KAAM,IAAI,CAAAA,KAAK,CACbT,IAAI,CAACK,OAAO,EAAI,uBAAuBP,QAAQ,CAACS,MAAM,EACxD,CAAC,CACH,CAEA,MAAO,CAAAP,IAAI,CACb,CAAE,MAAOU,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACA,KAAM,CAAAC,QAAQA,CAACC,QAAQ,CAAE,CACvB,MAAO,KAAI,CAAC7B,OAAO,CAAC,gBAAgB,CAAE,CACpC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAEmB,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAE,KAAKA,CAACC,WAAW,CAAE,CACvB,MAAO,KAAI,CAAChC,OAAO,CAAC,aAAa,CAAE,CACjC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAEsB,WACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,cAAcA,CAAA,CAAG,CACrB,MAAO,KAAI,CAACjC,OAAO,CAAC,UAAU,CAAC,CACjC,CAEA;AACA,KAAM,CAAAkC,QAAQA,CAAA,CAAG,CACf,MAAO,KAAI,CAAClC,OAAO,CAAC,WAAW,CAAE,CAC/B8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAK,UAAUA,CAACC,QAAQ,CAAE,CACzB,KAAM,CAAAC,eAAe,CAAG,CACtBC,KAAK,CAAEF,QAAQ,CAACE,KAAK,CACrBC,WAAW,CAAEH,QAAQ,CAACG,WAAW,EAAI,EAAE,CACvCC,QAAQ,CAAEJ,QAAQ,CAACI,QAAQ,EAAI,KAAK,CACpCC,OAAO,CAAEL,QAAQ,CAACK,OAAO,EAAI,IAAI,CACjCC,SAAS,CAAEN,QAAQ,CAACM,SAAS,EAAI,KAAK,CACtCC,UAAU,CAAEP,QAAQ,CAACO,UAAU,EAAI,IACrC,CAAC,CAED,MAAO,KAAI,CAAC3C,OAAO,CAAC,WAAW,CAAE,CAC/B8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAE2B,eACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAO,UAAUA,CAACC,MAAM,CAAET,QAAQ,CAAE,CACjC,KAAM,CAAAC,eAAe,CAAG,CACtBC,KAAK,CAAEF,QAAQ,CAACE,KAAK,CACrBC,WAAW,CAAEH,QAAQ,CAACG,WAAW,EAAI,EAAE,CACvCC,QAAQ,CAAEJ,QAAQ,CAACI,QAAQ,EAAI,KAAK,CACpCC,OAAO,CAAEL,QAAQ,CAACK,OAAO,EAAI,IAAI,CACjCC,SAAS,CAAEN,QAAQ,CAACM,SAAS,EAAI,KAAK,CACtCC,UAAU,CAAEP,QAAQ,CAACO,UAAU,EAAI,IACrC,CAAC,CAED,MAAO,KAAI,CAAC3C,OAAO,CAAC,UAAU6C,MAAM,KAAK,CAAE,CACzCf,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAE2B,eACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAS,UAAUA,CAACD,MAAM,CAAE,CACvB,MAAO,KAAI,CAAC7C,OAAO,CAAC,UAAU6C,MAAM,KAAK,CAAE,CACzCf,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAiB,WAAWA,CAACF,MAAM,CAAE,CACxB,MAAO,KAAI,CAAC7C,OAAO,CAAC,UAAU6C,MAAM,KAAK,CAAE,CACzCf,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAkB,WAAWA,CAAA,CAAG,CAClB,MAAO,KAAI,CAAChD,OAAO,CAAC,cAAc,CAAE,CAClC8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAmB,UAAUA,CAACpB,QAAQ,CAAE,CACzB,MAAO,KAAI,CAAC7B,OAAO,CAAC,cAAc,CAAE,CAClC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAEmB,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAqB,UAAUA,CAACC,MAAM,CAAEtB,QAAQ,CAAE,CACjC,MAAO,KAAI,CAAC7B,OAAO,CAAC,gBAAgBmD,MAAM,EAAE,CAAE,CAC5CrB,MAAM,CAAE,KAAK,CACbpB,IAAI,CAAEmB,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAuB,UAAUA,CAACD,MAAM,CAAE,CACvB,MAAO,KAAI,CAACnD,OAAO,CAAC,gBAAgBmD,MAAM,EAAE,CAAE,CAC5CrB,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAuB,UAAUA,CAACjB,QAAQ,CAAE,CACzB,MAAO,KAAI,CAACpC,OAAO,CAAC,oBAAoB,CAAE,CACxC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAE0B,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAkB,YAAYA,CAAA,CAAG,CACnB,MAAO,KAAI,CAACtD,OAAO,CAAC,kBAAkB,CAAE,CACtC8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAyB,cAAcA,CAAC1B,QAAQ,CAAE,CAC7B,MAAO,KAAI,CAAC7B,OAAO,CAAC,kBAAkB,CAAE,CACtC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAEmB,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAA2B,yBAAyBA,CAACC,UAAU,CAAEC,WAAW,CAAE,CACvD,MAAO,KAAI,CAAC1D,OAAO,CAAC,oBAAoByD,UAAU,cAAc,CAAE,CAChE3B,MAAM,CAAE,KAAK,CACbpB,IAAI,CAAEgD,WACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,WAAWA,CAAA,CAAG,CAClB,MAAO,KAAI,CAAC3D,OAAO,CAAC,cAAc,CAAE,CAClC8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAA8B,kBAAkBA,CAAA,CAAG,CACzB,MAAO,KAAI,CAAC5D,OAAO,CAAC,iBAAiB,CAAE,CACrC8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAA+B,gBAAgBA,CAAA,CAAG,CACvB,MAAO,KAAI,CAAC7D,OAAO,CAAC,iBAAiB,CAAE,CACrC8B,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAgC,oBAAoBA,CAACX,MAAM,CAAEtB,QAAQ,CAAE,CAC3C,MAAO,KAAI,CAAC7B,OAAO,CAAC,mBAAmBmD,MAAM,EAAE,CAAE,CAC/CrB,MAAM,CAAE,KAAK,CACbpB,IAAI,CAAEmB,QACR,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAkC,oBAAoBA,CAAC3B,QAAQ,CAAE,CACnC,MAAO,KAAI,CAACpC,OAAO,CAAC,iBAAiB,CAAE,CACrC8B,MAAM,CAAE,MAAM,CACdpB,IAAI,CAAE0B,QACR,CAAC,CAAC,CACJ,CACF,CAEA,cAAe,IAAI,CAAA7C,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}