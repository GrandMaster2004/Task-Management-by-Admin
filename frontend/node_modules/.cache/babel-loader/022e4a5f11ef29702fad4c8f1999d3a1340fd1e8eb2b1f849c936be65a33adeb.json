{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gondy\\\\Downloads\\\\taskflow-frontend\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport apiService from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    var _JSON$parse;\n    const token = (_JSON$parse = JSON.parse(localStorage.getItem(\"user\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n    if (token) {\n      apiService.setToken(token);\n      getCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const getCurrentUser = async () => {\n    try {\n      const response = await apiService.getCurrentUser();\n      if (response.success) {\n        setUser(response.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error(\"Failed to get current user:\", error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await apiService.login(credentials);\n      if (response.success && response.token) {\n        apiService.setToken(response.token);\n        setUser(response.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message || \"Login failed\"\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await apiService.register(userData);\n      if (response.success && response.token) {\n        apiService.setToken(response.token);\n        setUser(response.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message || \"Registration failed\"\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n  const logout = () => {\n    apiService.removeToken();\n    setUser(null);\n  };\n\n  // Role-based helpers\n  const isAdmin = () => (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const isSubAdmin = () => (user === null || user === void 0 ? void 0 : user.role) === \"subadmin\";\n  const isUser = () => (user === null || user === void 0 ? void 0 : user.role) === \"user\";\n  const hasRole = roles => roles.includes(user === null || user === void 0 ? void 0 : user.role);\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAdmin,\n    isSubAdmin,\n    isUser,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","user","setUser","loading","setLoading","_JSON$parse","token","JSON","parse","localStorage","getItem","setToken","getCurrentUser","response","success","logout","error","console","login","credentials","message","register","userData","removeToken","isAdmin","role","isSubAdmin","isUser","hasRole","roles","includes","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gondy/Downloads/taskflow-frontend/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport apiService from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = JSON.parse(localStorage.getItem(\"user\"))?.token;\n    if (token) {\n      apiService.setToken(token);\n      getCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const getCurrentUser = async () => {\n    try {\n      const response = await apiService.getCurrentUser();\n      if (response.success) {\n        setUser(response.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error(\"Failed to get current user:\", error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      const response = await apiService.login(credentials);\n      if (response.success && response.token) {\n        apiService.setToken(response.token);\n        setUser(response.user);\n        return { success: true };\n      } else {\n        return { success: false, message: response.message || \"Login failed\" };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await apiService.register(userData);\n      if (response.success && response.token) {\n        apiService.setToken(response.token);\n        setUser(response.user);\n        return { success: true };\n      } else {\n        return {\n          success: false,\n          message: response.message || \"Registration failed\",\n        };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n\n  const logout = () => {\n    apiService.removeToken();\n    setUser(null);\n  };\n\n  // Role-based helpers\n  const isAdmin = () => user?.role === \"admin\";\n  const isSubAdmin = () => user?.role === \"subadmin\";\n  const isUser = () => user?.role === \"user\";\n  const hasRole = (roles) => roles.includes(user?.role);\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAdmin,\n    isSubAdmin,\n    isUser,\n    hasRole,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}